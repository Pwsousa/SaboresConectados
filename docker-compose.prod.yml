version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: sabores-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: sabores_conectados_prod
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./config/mysql/prod:/etc/mysql/conf.d
      - ./backups:/backups
    networks:
      - sabores-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  eureka-server:
    image: ${DOCKER_USERNAME}/eureka-server:${VERSION}
    container_name: eureka-server-prod
    ports:
      - "8761:8761"
    networks:
      - sabores-prod-network
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_SERVER_PORT=8761
      - JAVA_OPTS=-Xmx512m -Xms256m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  cardapio-service:
    image: ${DOCKER_USERNAME}/cardapio-service:${VERSION}
    container_name: cardapio-service-prod
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/cardapio?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx1G -Xms512m
    networks:
      - sabores-prod-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  pedidos-service:
    image: ${DOCKER_USERNAME}/pedidos-service:${VERSION}
    container_name: pedidos-service-prod
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pedidos?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx1G -Xms512m
    networks:
      - sabores-prod-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  pagamentos-service:
    image: ${DOCKER_USERNAME}/pagamentos-service:${VERSION}
    container_name: pagamentos-service-prod
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pagamentos?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx1G -Xms512m
    networks:
      - sabores-prod-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  gateway:
    image: ${DOCKER_USERNAME}/gateway:${VERSION}
    container_name: gateway-prod
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx1G -Xms512m
    networks:
      - sabores-prod-network
    depends_on:
      eureka-server:
        condition: service_healthy
      cardapio-service:
        condition: service_healthy
      pedidos-service:
        condition: service_healthy
      pagamentos-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Monitoramento
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - sabores-prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_prod_data:/var/lib/grafana
    networks:
      - sabores-prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch-prod
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - sabores-prod-network
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana-prod
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - sabores-prod-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash-prod
    volumes:
      - ./config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - sabores-prod-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  mysql_prod_data:
  prometheus_data:
  grafana_prod_data:
  elasticsearch_data:

networks:
  sabores-prod-network:
    driver: bridge
