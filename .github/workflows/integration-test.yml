name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sabores_conectados
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Start services with Docker Compose
      run: |
        docker-compose -f docker-compose.test.yml up -d
        sleep 30

    - name: Wait for services to be ready
      run: |
        # Wait for Eureka Server
        timeout 60 bash -c 'until curl -f http://localhost:8761/actuator/health; do sleep 2; done'
        
        # Wait for other services
        timeout 60 bash -c 'until curl -f http://localhost:8084/actuator/health; do sleep 2; done'

    - name: Run integration tests
      run: |
        mvn clean test -Dspring.profiles.active=integration
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/sabores_conectados?createDatabaseIfNotExist=true
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: root
        EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://localhost:8761/eureka/

    - name: Stop services
      if: always()
      run: docker-compose -f docker-compose.test.yml down

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Integration Tests
        path: '**/target/surefire-reports/*.xml'
        reporter: java-junit
